name: "üéì CFB Live"

on:
  workflow_dispatch: {}
  schedule:
    # Top-of-hour in ET, regardless of DST:
    # ET 10:00‚Äì01:00 ‚Üí during EDT (UTC-4): 14‚Äì05
    - cron: "0 14-23 * * 5"     # Fri 10:00‚Äì19:00 ET (EDT)
    - cron: "0 0-5 * * 6"       # Sat 20:00‚Äì01:00 ET (EDT)
    - cron: "0 14-23 * * 6"     # Sat 10:00‚Äì19:00 ET (EDT)
    - cron: "0 0-2 * * 0"       # Sun 20:00‚Äì22:00 ET (EDT)
    # Repeat block for EST (UTC-5) to ‚Äúpin‚Äù 10:00‚Äì01:00 ET after DST switch
    - cron: "0 15-23 * * 5"     # Fri 10:00‚Äì18:00 ET (EST)
    - cron: "0 0-6 * * 6"       # Sat 19:00‚Äì01:00 ET (EST)
    - cron: "0 15-23 * * 6"     # Sat 10:00‚Äì18:00 ET (EST)
    - cron: "0 0-3 * * 0"       # Sun 19:00‚Äì22:00 ET (EST)

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      LEAGUE: "college-football"
      TAB_NAME: "CFB"
      GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
      GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm i axios googleapis

      # 1) Decide if any CFB games are pre-3rd (gate looks at ESPN scoreboard)
      - name: Gate for 5-minute cycle (CFB)
        id: gate
        env:
          LEAGUE: "college-football"
          DEBUG_MODE: "0"
        run: node .github/workflows/live-gate.mjs

      # 2) Always run the updater (this writes Status, Score, live odds)
      - name: Run live updater (CFB)
        env:
          LEAGUE: "college-football"
          TAB_NAME: "CFB"
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        run: node live-game.mjs

      # 3) If the gate said FAST=1, queue another run in ~5 minutes
      - name: Re-queue in 5 minutes if games are pre-3rd
        if: steps.gate.outputs.FAST == '1'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "üéì CFB Live"
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
          inputs: ""
        env:
          # sleep ~5m before re-queue to avoid a burst; keep job alive to rate-limit
          SNOOZE: 300
        run: |
          sleep "${SNOOZE}"
