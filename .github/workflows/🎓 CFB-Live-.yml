// ops/live-gate.mjs
// Purpose: tell the workflow whether to run live-game.mjs on */5 schedules.
// Rule: return run_updater=true if ANY game is IN PROGRESS and pre-3rd (Q1, Q2, Halftime).

import axios from "axios";

const LEAGUE = (process.env.LEAGUE || "college-football").trim(); // "college-football" | "nfl"

// Build an ET (America/New_York) YYYYMMDD for ESPN scoreboard
function etYmd(d = new Date()) {
  const fmt = new Intl.DateTimeFormat("en-US", {
    timeZone: "America/New_York",
    year: "numeric", month: "2-digit", day: "2-digit",
  });
  const parts = Object.fromEntries(fmt.formatToParts(d).map(p => [p.type, p.value]));
  return `${parts.year}${parts.month}${parts.day}`;
}

function leaguePath(l) {
  return l === "nfl" ? "nfl" : "college-football";
}

function isPreThird(status) {
  // ESPN status shape:
  // status.type.state -> "in" | "post" | "pre"
  // status.period -> 1,2,3,4,...
  // status.type.shortDetail -> e.g. "Halftime" / "3:41 - 1st" etc.
  const s = status || {};
  const period = Number(s.period || 0);
  const state = (s?.type?.state || "").toLowerCase();
  const short = (s?.type?.shortDetail || "").toLowerCase();

  if (state !== "in") return false;
  if (period <= 2) return true;
  if (short.includes("half")) return true;
  return false;
}

async function fetchScoreboard(dayYmd) {
  const sportPath = leaguePath(LEAGUE);
  const url = `https://site.api.espn.com/apis/site/v2/sports/football/${sportPath}/scoreboard?dates=${dayYmd}&limit=500`;
  const { data } = await axios.get(url, { timeout: 15000 });
  return data;
}

(async () => {
  try {
    const ymd = etYmd();
    const board = await fetchScoreboard(ymd);
    const events = Array.isArray(board?.events) ? board.events : [];

    let livePreThird = [];
    for (const ev of events) {
      const comp = ev?.competitions?.[0];
      const st = comp?.status || ev?.status;
      if (isPreThird(st)) {
        livePreThird.push(ev?.id || comp?.id || "unknown");
      }
    }

    const runUpdater = livePreThird.length > 0;

    console.log(`[live-gate] league=${LEAGUE}, etDate=${ymd}`);
    console.log(`[live-gate] live pre-3rd games: ${livePreThird.join(", ") || "(none)"}`);
    console.log(`run_updater=${runUpdater ? "true" : "false"}`);
    process.exit(0);
  } catch (e) {
    // Fail closed: if gate can't decide, don't spam the */5 runs
    console.log(`[live-gate] error: ${e?.message || e}`);
    console.log("run_updater=false");
    process.exit(0);
  }
})();
