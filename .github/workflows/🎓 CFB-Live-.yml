name: "ðŸŽ“ CFB Live"

on:
  # manual run
  workflow_dispatch:
    inputs:
      forceFiveMin:
        description: "Force 5-minute loop (debug)"
        required: false
        default: "false"
  # top of every hour (UTC) â€” the gate step applies the 10:00â€“01:59 ET window
  schedule:
    - cron: "0 * * * *"

# IMPORTANT: allow this workflow to call the Actions API
permissions:
  contents: read
  actions: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # league wiring for live-game.mjs
      LEAGUE: "college-football"
      TAB_NAME: "CFB"
      GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
      GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
      # toggle verbose logging in the updater
      DEBUG_MODE: ""
    steps:
      - name: Set up job
        run: echo "Starting CFB Liveâ€¦"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm i axios googleapis

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Gate: hour window & live check â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      # 10:00â€“01:59 ET always (no DST worry). Also decide whether to loop every 5 minutes.
      - name: Gate for 5-minute cycle (CFB)
        id: gate
        shell: bash
        run: |
          node - <<'JS'
          const { DateTime } = require('luxon');
          const ET = DateTime.now().setZone('America/New_York');
          const hour = ET.hour;
          // Window: 10:00â€“01:59 ET
          const inWindow = (hour >= 10 || hour < 2);
          console.log(`ET now: ${ET.toFormat('yyyy-LL-dd HH:mm:ss ZZZZ')} (hour=${hour})`);
          if (!inWindow) {
            console.log('::set-output name=shouldRun::false');
            console.log('Outside 10:00â€“01:59 ET â€” skip.');
            process.exit(0);
          }
          // Default: only hourly; switch to 5-min if any ESPN scoreboard game is < 3rd Q.
          const leaguePath = 'college-football';
          const url = `https://site.api.espn.com/apis/site/v2/sports/football/${leaguePath}/scoreboard`;
          require('axios').get(url, { timeout: 15000 }).then(({data})=>{
            const evts = data?.events || [];
            let pre3rd = false;
            for (const e of evts) {
              const st = e?.status?.type?.shortDetail?.toLowerCase() || '';
              // treat Halftime / 1st / 2nd / OT* (rare) as "pre-3rd" for our updater loop
              if (/\b(1st|2nd|half|halftime|ot|in progress)\b/.test(st) && !/\b3rd|4th|final\b/.test(st)) {
                pre3rd = true; break;
              }
            }
            // Allow forcing via manual input
            const force = (process.env.FORCE_FIVE_MIN || '').toLowerCase() === 'true';
            const loop5 = force || pre3rd;
            console.log(`pre3rd=${pre3rd} force=${force} => loop5=${loop5}`);
            console.log(`::set-output name=shouldRun::true`);
            console.log(`::set-output name=loop5::${loop5 ? 'true' : 'false'}`);
          }).catch(err=>{
            console.log('Scoreboard check failed:', err?.message || err);
            // If the check fails, be conservative and just run once (no loop)
            console.log('::set-output name=shouldRun::true');
            console.log('::set-output name=loop5::false');
          });
          JS
        env:
          FORCE_FIVE_MIN: ${{ github.event.inputs.forceFiveMin }}

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Live updater â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Run live updater (CFB)
        if: steps.gate.outputs.shouldRun == 'true'
        run: node live-game.mjs

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 5-minute loop & self-dispatch â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: Sleep 5 minutes when pre-3rd games exist
        if: steps.gate.outputs.loop5 == 'true'
        run: sleep 300

      # Re-queue this workflow using a PAT with "workflow" scope
      - name: Re-queue workflow (self-dispatch)
        if: steps.gate.outputs.loop5 == 'true'
        uses: actions/github-script@v7
        with:
          # Use a PAT secret; see instructions below
          github-token: ${{ secrets.GH_PAT_WORKFLOW }}
          script: |
            const ref = context.ref?.replace('refs/heads/','') || 'main';
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "ðŸŽ“ CFB-Live-.yml",
              ref
            });
            core.info(`Re-dispatched ${ref} for another 5-minute cycle`);
