name: CFB Halftime (Daily Morning Schedule)

on:
  workflow_dispatch:
  schedule:
    # Runs every morning 9:00 AM ET (13:00 UTC)
    - cron: "0 13 * * *"

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      games: ${{ steps.collect.outputs.games }}
    steps:
      - name: Collect today’s (and tomorrow’s) CFB games
        id: collect
        run: |
          set -euo pipefail
          ET_TZ="America/New_York"
          today_et="$(TZ=$ET_TZ date +%Y%m%d)"
          tomorrow_et="$(TZ=$ET_TZ date -d '+1 day' +%Y%m%d)"

          fetch() { curl -sS "https://site.api.espn.com/apis/site/v2/sports/football/college-football/scoreboard?dates=$1&groups=80&limit=300"; }

          tmp="$(mktemp)"
          { fetch "$today_et"; fetch "$tomorrow_et"; } | jq -s '[.[].events[]?] | unique_by(.id)' > "$tmp"

          now_ts=$(date -u +%s)
          jq -r --argjson now "$now_ts" '
            [ .[]
              | { id: .id
                , kickoff: .date
                , run_at: ( ((.date | fromdateiso8601) + (60*60)) | todateiso8601 )
                , delay:   ( ((.date | fromdateiso8601) + (60*60)) - $now )
              }
              | select(.delay >= 0 and .delay <= (20*60*60))  # within next ~20 h
            ]
          ' "$tmp" | jq -c '.' | sed '1!b;s/^/games=/' >> "$GITHUB_OUTPUT"

  per-game:
    needs: build-matrix
    if: ${{ needs.build-matrix.outputs.games != '' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.build-matrix.outputs.games) }}
    concurrency:
      group: cfb-halftime-${{ matrix.include.id }}
      cancel-in-progress: false
    env:
      GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
      GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
      TAB_NAME: CFB
      TARGET_GAME_ID: ${{ matrix.include.id }}
      MAX_TOTAL_MIN: "200"
    steps:
      - uses: actions/checkout@v4

      - name: Sleep until kickoff + 60 min
        run: |
          target_iso='${{ matrix.include.run_at }}'
          target_ts=$(date -u -d "$target_iso" +%s)
          now_ts=$(date -u +%s)
          wait=$(( target_ts - now_ts ))
          if [ $wait -le 0 ]; then
            echo "Already past halftime window; running now."
          else
            echo "Sleeping $wait seconds until $target_iso (UTC)…"
            sleep $wait
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npx playwright install --with-deps chromium

      - name: Run halftime watcher for this game
        run: node ./cfb-halftime-single.mjs
